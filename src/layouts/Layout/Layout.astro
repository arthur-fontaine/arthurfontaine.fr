---
import { SEO } from "astro-seo";

import { darkTheme, lightTheme } from "../../styles/themes.css";
import {
	htmlClass,
	bodyContainerClass,
	asideClass,
	mainClass,
	expandedClass,
	titleClass,
	socialsClass,
	sendEmailTitleClass,
	emailClass,
	downloadResumeClass,
} from "./layout.css";

import loadIcons from "../../utils/loadIcons";
import social from "../../../data/social.json";
import contact from "../../../data/contact.json";
import MotoEaster from "../../components/MotoEaster/MotoEaster.astro";

const icons = await loadIcons(
	(
		social.social.map((social) => social.icon) as string[]
	).map((icon) => (icon.split("/").pop() ?? "").split(".")[0])
);

export interface Props {
	title: string;
	description: string;
	noAside?: boolean;
}

const { title, description } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class={[htmlClass, darkTheme, lightTheme].join(" ")}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
		 <link rel="icon" type="image/gif" href="/favicon.gif" />
		<meta name="generator" content={Astro.generator} />
		<SEO
			title={title}
			description={description}
			twitter={{
				card: "summary",
				site: "@f_arthr",
				creator: "@f_arthr",
			}}
			openGraph={{
				basic: {
					title,
					type: "website",
					url: "https://arthurfontaine.fr",
					image: "https://arthurfontaine.fr/og-image.png",
				},
				image: {
					url: "https://arthurfontaine.fr/og-image.png",
					alt: "Arthur Fontaine",
				},
			}}
		/>
		<meta
			name="keywords"
			content="arthur fontaine, arthur, fontaine, developer, data, ai, ia, front-end, front end, back-end, back end, full-stack, full stack, web, freelance, paris, france, javascript, react, vue, svelte, typescript, python"
		/>
		<meta name="author" content="Arthur Fontaine" />
		<style>
			html {
				cursor: url('/cursor.svg'), auto;
			}
		</style>
	</head>
	<body style="display: none;" onload="document.body.style.display = 'block';">
		<MotoEaster />
		<div class={bodyContainerClass}>
			{!Astro.props.noAside &&
				<aside class={asideClass}>
					<h1 class={titleClass}>Arthur<br />Fontaine</h1>
					<div class={socialsClass}>
						{
							social.social.map((social) => (
								<a
									href={social.link}
									aria-label={social.name}
									set:html={icons[social.name.toLowerCase()]}
								/>
							))
						}
					</div>
					<div>
						<p class={sendEmailTitleClass}>Send me a message!</p>
						<a class={emailClass} href={`mailto:${contact.email}`}>
							{contact.email}
						</a>
					</div>
					<div class={expandedClass}></div>
					<footer>
						<a class={downloadResumeClass} href="/resume">
							Download my resume
						</a>
					</footer>
				</aside>
			}
			<main class={mainClass}>
				<slot />
			</main>
		</div>
	</body>
</html>

<script>
	import { darkTheme, lightTheme } from "../../styles/themes.css";

	const updateTheme = () => {
		const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");

		if (prefersDarkScheme.matches) {
			document.documentElement.classList.add(darkTheme);
			document.documentElement.classList.remove(lightTheme);
		} else {
			document.documentElement.classList.add(lightTheme);
			document.documentElement.classList.remove(darkTheme);
		}
	};

	updateTheme();

	window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", updateTheme);
</script>
