---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout/Layout.astro";
import {
  blogClass,
  headerClass,
  metaContainerClass,
  returnToHomeClass,
  returnToHomeIconClass,
  tagsClass,
  translationItemClass,
  translationListClass,
  translationListContainerClass,
} from "./blog.css";
import loadIcons from "../../utils/loadIcons";

export async function getStaticPaths() {
  const pages = await getCollection("blog");

  const paths = pages.map((page) => {
    const lang = page.data.language;
    const articleSlug = page.slug;
    return { params: { lang, articleSlug }, props: page };
  });

  return paths;
}

const page = Astro.props;

const title = page.data.title;
const description = page.data.description;

const { Content } = await page.render();

const icons = await loadIcons(["arrow-left"]);
---

<Layout title={title} description={description} noAside>
  <header class={headerClass}>
    <a href="/blog" aria-label="Return to home" class={returnToHomeClass}>
      <svg set:html={icons["arrow-left"]} class={returnToHomeIconClass} />
      <p>Return to home</p>
    </a>
  </header>

  <article class={blogClass}>
    <header>
      <h1>{title}</h1>
      <div class={metaContainerClass}>
        <time datetime={page.data.date.toString()}>
          {page.data.date.toLocaleDateString(page.data.language)}</time
        >
        {
          page.data.translationKeys &&
            Object.keys(page.data.translationKeys).length > 0 && (
              <div class={translationListContainerClass}>
                <p>Also available in:</p>
                <ul class={translationListClass}>
                  {Object.entries(page.data.translationKeys)
                    .filter(
                      ([translationKey]) => translationKey !== page.data.language,
                    )
                    .map(([translationKey, translationValue]) => (
                      <li class={translationItemClass}>
                        <a href={`/blog/${translationValue}`}>{translationKey}</a>
                      </li>
                    ))}
                </ul>
              </div>
            )
        }
      </div>
    </header>

    <main>
      <Content />
    </main>

    <footer>
      <hr />
      <div class={tagsClass}>
        {Astro.props.data.tags.map((tag) => <span>{tag}</span>)}
      </div>
    </footer>
  </article>
</Layout>
